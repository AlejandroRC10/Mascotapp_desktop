/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mascotapp_desktop.views;

import java.awt.Frame;
import java.util.List;
import javax.swing.table.AbstractTableModel;
import mascotapp_desktop.controllers.MascotaController;
import mascotapp_desktop.models.Mascota;

/**
 *
 * @author alex_
 */
public class ListadoBusquedaMascotas extends javax.swing.JDialog {

    /**
     * Creates new form ListadoBusquedaMascotas
     *
     * @param parent
     * @param modal
     */
    public ListadoBusquedaMascotas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setParent(parent);
        
        mc = new MascotaController();
        listaMascotas = mc.getMascotas();
        //System.out.println(mc.getMascotas());
        jtTabla.setModel(getModeloTablaMascota(listaMascotas));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();
        jbVer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Nº Chip", "Propietario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtTabla);

        jbVer.setText("Ver");
        jbVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbVer)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jbVer)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVerActionPerformed
        mc.setMascota(selectMascotaList());
        dispose();
        PerfilMascota pm = new PerfilMascota(parent, true);
        pm.setVisible(true);
    }//GEN-LAST:event_jbVerActionPerformed
    
    private Mascota selectMascotaList() {
        return listaMascotas.get(jtTabla.getSelectedRow());
    }
    
    public AbstractTableModel getModeloTablaMascota(List<Mascota> listaMascotas) {
        final int COLUMNAS_NUMERO = 3;
        final String[] COLUMNAS_NOMBRES = {"Nombre", "Nº Chip", "Propietario"};
//		final int COLUMNA_ID = 0;
        final int COLUMNA_NOMBRE = 0;
        final int COLUMNA_CHIP = 1;
        final int COLUMNA_PROPIETARIO = 2;

        AbstractTableModel modeloTabla = new AbstractTableModel() {
            @Override
            public int getRowCount() {

                return listaMascotas.size();

            }

            @Override
            public int getColumnCount() {

                return COLUMNAS_NUMERO;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {

                Mascota masc = listaMascotas.get(rowIndex);
                Object valor = null;

                switch (columnIndex) {

                    case COLUMNA_NOMBRE:
                        valor = masc.getNombre();
                        break;
                    case COLUMNA_CHIP:
                        valor = masc.getNum_chip();
                        break;
                    case COLUMNA_PROPIETARIO:
                        valor = masc.getPropietario().getNombre();
                        break;

                    default:
                        throw new AssertionError("Columna invalida");
                }

                return valor;
            }

            public String getColumnName(int column) {
                return COLUMNAS_NOMBRES[column];
            }
        };
        return modeloTabla;
    }

    private void setParent(Frame parent) {
        this.parent = parent;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListadoBusquedaMascotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListadoBusquedaMascotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListadoBusquedaMascotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListadoBusquedaMascotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListadoBusquedaMascotas dialog = new ListadoBusquedaMascotas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbVer;
    private javax.swing.JTable jtTabla;
    // End of variables declaration//GEN-END:variables
    private MascotaController mc;
    private Frame parent;
    private List<Mascota> listaMascotas;
}
